#!/bin/bash
has() { type -p "$1" &> /dev/null; }

if has sudo ; then
    printf "Using sudo for root privileges\n"
    rootstring="sudo"
elif has doas ; then
    printf "Using doas for root privileges\n"
    rootstring="doas"
elif [ "$EUID" -eq 0 ] ; then
    printf "Using current user for root privileges\n"
    rootstring=""
else
    printf "ERROR: no root privileges found.\n"
    printf "You can try running this script as root or verifying that sudo or doas is in your PATH"
    exit
fi

updateApt() {
    $rootstring apt update
    $rootstring apt upgrade
    $rootstring apt autoremove
}
updateBrew() {
    brew -v update
    brew -v upgrade
    brew -v autoremove
}

updateFlatpak() { $rootstring flatpak update; }
updateMac() {
    softwareupdate --verbose -l
    softwareupdate --verbose -ir --agree-to-license
}

updatePacman() { $rootstring pacman -Syu; }
updatePip() { python -m pip install --upgrade pip; }

updatePkg() {
    pkg upgrade
    pkg autoclean
}
updatePort() {
    port -v selfupdate
    port -v upgrade outdated
    port -v uninstall inactive
}
updateSnap() { $rootstring snap refresh; }

updateAll() {
    has apt && updateApt
    has brew && updateBrew
    has flatpak && updateFlatpak
    has softwareupdate && updateMac
    has pacman && updatePacman
    has pip && updatePip
    has pkg && updatePkg
    has port && updatePort
    has snap && updateSnap
}

if (($#==0)); then
    updateAll
else
    case $1 in
        all) updateAll ;;

        apt) updateApt ;;
        brew) updateBrew ;;
        flatpak) updateFlatpak ;;
        mac) updateMac ;;
        pacman) updatePacman;;
        pip) updatePip ;;
        pkg) updatePkg ;;
        port) updatePort ;;
        snap) updateSnap ;;

        *) echo "Error: unrecognized parameter" ;;
    esac
fi

